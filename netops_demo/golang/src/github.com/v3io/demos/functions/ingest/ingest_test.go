package ingest

import (
	"testing"

	"github.com/nuclio/logger"
	"github.com/nuclio/nuclio-test-go"
	"github.com/nuclio/zap"
	"github.com/stretchr/testify/suite"
)

type ingestSuite struct {
	suite.Suite
	logger      logger.Logger
	testContext *nutest.TestContext
}

func (suite *ingestSuite) SetupTest() {
	var err error

	suite.logger, _ = nucliozap.NewNuclioZapTest("test")

	// Create TestContext and specify the function name, verbose, data
	suite.testContext, err = nutest.NewTestContext(Ingest, true, nil)
	suite.Require().NoError(err)

	// Optional, initialize context must have a function in the form:
	//    InitContext(context *nuclio.Context) error
	err = suite.testContext.InitContext(InitContext)
	suite.Require().NoError(err)
}

func (suite *ingestSuite) TestIngestValid() {

	bodyString := `
{
    "cpu_utilization_percent": {
        "timestamps": [
            1533733834000,
            1533733834050,
            1533733834100,
            1533733834150,
            1533733834200,
            1533733834250,
            1533733834300,
            1533733834350,
            1533733834400,
            1533733834450,
            1533733834500,
            1533733834550,
            1533733834600,
            1533733834650,
            1533733834700,
            1533733834750,
            1533733834800,
            1533733834850,
            1533733834900,
            1533733834950
        ],
        "values": [
            71.58516090785906,
            77.63320198786514,
            75.48863462709936,
            79.77898105575649,
            71.93604512317557,
            72.7899142445415,
            79.76668682405038,
            79.94993658096789,
            80.08170201850542,
            78.9076828778308,
            75.32668895749784,
            68.6911184834741,
            71.57248931635536,
            82.29054826052646,
            79.34950466249143,
            73.84374575985495,
            77.03767792176615,
            78.2725678670246,
            63.39092972523926,
            74.8302614292849
        ],
        "alerts": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Operation - Chassis CPU Utilization (80.08170201850542) exceed Critical threshold (80.0)",
            "",
            "",
            "",
            "",
            "Operation - Chassis CPU Utilization (82.29054826052646) exceed Critical threshold (80.0)",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        "is_error": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    "throughput_mbyte_sec": {
        "timestamps": [
            1533733834000,
            1533733834050,
            1533733834100,
            1533733834150,
            1533733834200,
            1533733834250,
            1533733834300,
            1533733834350,
            1533733834400,
            1533733834450,
            1533733834500,
            1533733834550,
            1533733834600,
            1533733834650,
            1533733834700,
            1533733834750,
            1533733834800,
            1533733834850,
            1533733834900,
            1533733834950
        ],
        "values": [
            81.34512654917741,
            242.78755678644686,
            0,
            300,
            300,
            235.85865547316496,
            228.71043766638573,
            112.33627461505849,
            209.60676715838758,
            234.3468327303372,
            0,
            203.27081504481407,
            186.6702438273768,
            0,
            149.31769629361645,
            158.8286105263758,
            183.1161916190916,
            206.79555703694373,
            199.25860037502963,
            281.955134496773
        ],
        "alerts": [
            "",
            "",
            "Low Throughput (0) below threshold (3.0)",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Low Throughput (0) below threshold (3.0)",
            "",
            "",
            "Low Throughput (0) below threshold (3.0)",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        "is_error": [
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ]
    },
    "packet_loss": {
        "timestamps": [
            1533733834000,
            1533733834050,
            1533733834100,
            1533733834150,
            1533733834200,
            1533733834250,
            1533733834300,
            1533733834350,
            1533733834400,
            1533733834450,
            1533733834500,
            1533733834550,
            1533733834600,
            1533733834650,
            1533733834700,
            1533733834750,
            1533733834800,
            1533733834850,
            1533733834900,
            1533733834950
        ],
        "values": [
            1.1779197347665067,
            1.9119426938568513,
            1.2262454449242293,
            1.2212821871311543,
            1.4669376171196364,
            1.8613325028664078,
            1.3362753045440103,
            1.9449085403450925,
            1.3330952037758754,
            1.1132009582487465,
            1.3696109706724877,
            0.710571981464163,
            1.8774240430306763,
            1.713719866760026,
            1.4939682620844945,
            1.051482436054534,
            1.5021898100584443,
            1.6458255892499305,
            2.4210833300639285,
            0.911913324650527
        ],
        "alerts": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "High Packet Loss (2.4210833300639285) above threshold (2.0)",
            ""
        ],
        "is_error": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    "latency": {
        "timestamps": [
            1533733834000,
            1533733834050,
            1533733834100,
            1533733834150,
            1533733834200,
            1533733834250,
            1533733834300,
            1533733834350,
            1533733834400,
            1533733834450,
            1533733834500,
            1533733834550,
            1533733834600,
            1533733834650,
            1533733834700,
            1533733834750,
            1533733834800,
            1533733834850,
            1533733834900,
            1533733834950
        ],
        "values": [
            5.398297647696318,
            3.8738349820215303,
            3.6242822658204896,
            6.436707909468402,
            5.166855956117543,
            6.382151916625901,
            5.210301543972159,
            6.946586377924426,
            5.125703929135469,
            5.175648172419271,
            2.809223009632173,
            5.922469923022994,
            10,
            5.5015345911571325,
            4.142279789761261,
            4.543633483503898,
            3.379849311282091,
            4.691857946122445,
            4.5161436688962215,
            4.395570604095654
        ],
        "alerts": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "High Latency (10) above threshold (7.0)",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        "is_error": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ]
    }
}`

	ingestionBatchEvent := nutest.TestEvent{
		Path: "/some/path",
		Body: []byte(bodyString),
	}

	// invoke the tested function with the new event and log it's output
	_, err := suite.testContext.Invoke(&ingestionBatchEvent)
	suite.Require().NoError(err)
}

func TestProvisionerTestSuite(t *testing.T) {
	suite.Run(t, new(ingestSuite))
}
